(self.webpackChunksydney_scientific_www=self.webpackChunksydney_scientific_www||[]).push([[953],{4953:(n,e,o)=>{"use strict";o.r(e),o.d(e,{GettingStartedModule:()=>O});var s=o(8583),t=o(2305),i=o(7716),d=o(3254);function a(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Though this guide is for the Ubuntu linux; it should be easy to retrofit to others. "),i.qZA())}function r(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Though this guide has been tested on macOS High Sierra; it will probably work on older versions. "),i.qZA())}function c(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Follow this guide on Windows 7+. "),i.qZA())}function u(n,e){1&n&&(i.ynx(0),i._uU(1,"Command Prompt (cmd.exe)"),i.BQk())}function p(n,e){1&n&&(i.ynx(0),i._uU(1,"Terminal"),i.BQk())}function l(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,"\n    sudo apt update\n    sudo apt install build-essential git-core tcl\n  "),i.qZA(),i.qZA())}function g(n,e){1&n&&(i.TgZ(0,"a",23),i._uU(1,"Latest XCode and Command Line Tools"),i.qZA())}function Z(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,'\n    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n    brew update\n    brew install git\n  '),i.qZA(),i.qZA())}function h(n,e){1&n&&(i.TgZ(0,"section",24),i._uU(1,' Ensure you check "Add to PATH" whenever asked: '),i.TgZ(2,"ol"),i.TgZ(3,"li"),i.TgZ(4,"a",25),i._uU(5," Build Tools for Visual Studio 2017 "),i.qZA(),i.qZA(),i.TgZ(6,"li"),i.TgZ(7,"a",26),i._uU(8,"git"),i.qZA(),i.qZA(),i.qZA(),i.TgZ(9,"p",9),i._uU(10,"Test that it installed correctly with:"),i.qZA(),i.TgZ(11,"pre",10),i.TgZ(12,"code",11),i._uU(13,"\n      git --version\n      cl /?\n    "),i.qZA(),i.qZA(),i.qZA())}function f(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,"\n    curl -L https://git.io/n-install | bash -s -- -y lts\n  "),i.qZA(),i.qZA())}function _(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Download and setup from latest: "),i.TgZ(2,"a",27),i._uU(3,"'Windows Installer (.msi)' [LTS]"),i.qZA(),i._uU(4,". "),i.qZA())}function T(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,"\n    # Alternatively build from source. Quick guide: https://askubuntu.com/a/868862\n    sudo add-apt-repository ppa:chris-lea/redis-server\n    sudo apt update\n    sudo apt install redis-server\n  "),i.qZA(),i.qZA())}function A(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,"\n    brew install redis\n    brew services start redis\n  "),i.qZA(),i.qZA())}function m(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Download and install the "),i.TgZ(2,"a",28),i._uU(3,"latest .msi"),i.qZA(),i._uU(4,". "),i.qZA())}function S(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Follow "),i.TgZ(2,"a",29),i._uU(3,"their official guide"),i.qZA(),i._uU(4,". I prefer using latest version from their apt repository. "),i.qZA())}function w(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Follow "),i.TgZ(2,"a",30),i._uU(3,"their official guide"),i.qZA(),i._uU(4,". I prefer the "),i.TgZ(5,"a",31),i._uU(6,"EnterpriseDB package"),i.qZA(),i._uU(7,". "),i.qZA())}function q(n,e){1&n&&(i.TgZ(0,"p",9),i._uU(1," Run this in an Administrator Command Prompt ("),i.TgZ(2,"a",32),i._uU(3,"how-to"),i.qZA(),i._uU(4,"): "),i.qZA())}function U(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,'\n    POSTGRES_DB_USER=\'REPLACE_ME\'\n    REST_PASS=\'REPLACE_ME\' # recommend using `read -s REST_PASS`\n    POSTGRES_DB_NAME=\'REPLACE_ME\'\n\n    createuser --superuser "$POSTGRES_DB_USER"\n    psql -c "CREATE USER $POSTGRES_DB_USER WITH LOGIN PASSWORD \'$REST_PASS\';"\n    createdb "$POSTGRES_DB_NAME" --owner "$POSTGRES_DB_USER"\n    export RDBMS_URI="postgres://$POSTGRES_DB_USER:$REST_PASS@localhost/$POSTGRES_DB_NAME"\n    # ^Recommend adding this `export` line to your ~/.bash_profile\n  '),i.qZA(),i.qZA())}function E(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",33),i._uU(2,'\n    set POSTGRES_DB_USER="REPLACE_ME"\n    set REST_PASS="REPLACE_ME"\n    set POSTGRES_DB_NAME="REPLACE_ME"\n\n    createuser --superuser "%POSTGRES_DB_USER%"\n    psql -c "CREATE USER %POSTGRES_DB_USER% WITH LOGIN PASSWORD \'%REST_PASS%\';"\n    createdb "%POSTGRES_DB_NAME%" --owner "%POSTGRES_DB_USER%"\n\n    setx RDBMS_URI "postgres://%POSTGRES_DB_USER%:%REST_PASS%@localhost/%POSTGRES_DB_NAME%"\n    :: This last line will add RDBMS_URI to your environment\n  '),i.qZA(),i.qZA())}function k(n,e){1&n&&(i.TgZ(0,"p"),i._uU(1," Alternatively use "),i.TgZ(2,"a",34),i._uU(3,"my script"),i.qZA(),i._uU(4,". "),i.qZA())}function R(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,"\n    psql \"$RDBMS_URI\" -c 'SELECT 1'\n  "),i.qZA(),i.qZA())}function b(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2,'\n    psql "%RDBMS_URI%" -c "SELECT 1"\n  '),i.qZA(),i.qZA())}function x(n,e){1&n&&(i.TgZ(0,"span"),i.TgZ(1,"a",35),i.TgZ(2,"code"),i._uU(3,"sed"),i.qZA(),i.qZA(),i._uU(4," and "),i.qZA())}function I(n,e){1&n&&(i.TgZ(0,"code"),i._uU(1,"brew install hub"),i.qZA())}function y(n,e){1&n&&(i.TgZ(0,"span"),i.TgZ(1,"a",36),i._uU(2,"latest package"),i.qZA(),i._uU(3," for your platform."),i.qZA())}function N(n,e){1&n&&(i.TgZ(0,"pre",10),i.TgZ(1,"code",11),i._uU(2),i.qZA(),i.qZA()),2&n&&(i.xp6(2),i.AsE('\n    hub create organisation/"$',"{","PWD##*/","}","\" -d 'Description here'\n  "))}const P=[{path:"",component:(()=>{class n{constructor(n){this.platformPickerService=n,this.os=n.is.bind(n)}}return n.\u0275fac=function(e){return new(e||n)(i.Y36(d.P))},n.\u0275cmp=i.Xpm({type:n,selectors:[["app-getting-started"]],decls:105,vars:29,consts:[[1,"docs-markdown","pad"],[1,"docs-markdown-h5"],["class","docs-markdown-p",4,"ngIf"],[4,"ngIf"],["id","step-0-install-build-dependencies",1,"docs-header-link","docs-markdown-h3"],["class","docs-markdown-pre",4,"ngIf"],["href","https://developer.apple.com/downloads",4,"ngIf"],["class","docs-guide-content",4,"ngIf"],["id","step-1-install-nodejs",1,"docs-header-link","docs-markdown-h3"],[1,"docs-markdown-p"],[1,"docs-markdown-pre"],[1,"lang-bash","docs-markdown-code"],["id","step-2-install-redis",1,"docs-header-link","docs-markdown-h3"],["id","step-3-install-postgres",1,"docs-header-link","docs-markdown-h3"],["id","step-4-install-android",1,"docs-header-link","docs-markdown-h3"],["href","https://developer.android.com/studio/install.html",1,"docs-markdown-a"],["id","step-5-install-global-nodejs-packages",1,"docs-header-link","docs-markdown-h3"],["id","step-6-development-backend",1,"docs-header-link","docs-markdown-h3"],["id","step-7-angular-frontend",1,"docs-header-link","docs-markdown-h3"],["id","step-8-android",1,"docs-header-link","docs-markdown-h3"],["id","step-9-rebranding",1,"docs-header-link","docs-markdown-h3"],["href","https://github.com/sharkdp/fd"],["href","https://hub.github.com"],["href","https://developer.apple.com/downloads"],[1,"docs-guide-content"],["href","https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15",1,"docs-markdown-a"],["href","https://git-scm.com/download/win",1,"docs-markdown-a"],["href","https://nodejs.org/en/download/",1,"docs-markdown-a"],["href","https://github.com/MicrosoftArchive/redis/releases",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/linux/ubuntu/",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/macosx/",1,"docs-markdown-a"],[1,"http://www.enterprisedb.com/products/pgdownload.do#macosx"],["href","https://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspx",1,"docs-markdown-a"],[1,"lang-batch","docs-markdown-code"],["href","https://github.com/offscale/offsh-postgres",1,"docs-markdown-a"],["href","https://chocolatey.org/packages/sed"],["href","https://github.com/github/hub/releases"]],template:function(n,e){1&n&&(i.TgZ(0,"div",0),i.TgZ(1,"h5",1),i._uU(2," This guides you to setting up your computer to run all my scaffolds. "),i.qZA(),i.YNc(3,a,2,0,"p",2),i.YNc(4,r,2,0,"p",2),i.YNc(5,c,2,0,"p",2),i.TgZ(6,"em"),i._uU(7," All grey background assumes you are running in an active "),i.YNc(8,u,2,0,"ng-container",3),i.YNc(9,p,2,0,"ng-container",3),i._uU(10," session "),i.qZA(),i.TgZ(11,"h3",4),i._uU(12," Step 0: Install build dependencies "),i.qZA(),i.YNc(13,l,3,0,"pre",5),i.YNc(14,g,2,0,"a",6),i.YNc(15,Z,3,0,"pre",5),i.YNc(16,h,14,0,"section",7),i.TgZ(17,"h3",8),i._uU(18," Step 1: Install Node.js "),i.qZA(),i.YNc(19,f,3,0,"pre",5),i.YNc(20,_,5,0,"p",2),i.TgZ(21,"p",9),i._uU(22,"Test that it installed correctly with:"),i.qZA(),i.TgZ(23,"pre",10),i.TgZ(24,"code",11),i._uU(25,"\n    node --version\n    npm --version\n  "),i.qZA(),i.qZA(),i.TgZ(26,"h3",12),i._uU(27," Step 2: Install Redis "),i.qZA(),i.YNc(28,T,3,0,"pre",5),i.YNc(29,A,3,0,"pre",5),i.YNc(30,m,5,0,"p",2),i.TgZ(31,"p",9),i._uU(32,"You can test it's installed and running with:"),i.qZA(),i.TgZ(33,"pre",10),i.TgZ(34,"code",11),i._uU(35,"\n    redis-cli ping\n  "),i.qZA(),i.qZA(),i.TgZ(36,"p",9),i._uU(37,"If that failed, open a new session and run this, then try the ping again:"),i.qZA(),i.TgZ(38,"pre",10),i.TgZ(39,"code",11),i._uU(40,"\n    redis-server\n  "),i.qZA(),i.qZA(),i.TgZ(41,"h3",13),i._uU(42," Step 3: Install and configure Postgres "),i.qZA(),i.YNc(43,S,5,0,"p",2),i.YNc(44,w,8,0,"p",2),i.YNc(45,q,5,0,"p",2),i.YNc(46,U,3,0,"pre",5),i.YNc(47,E,3,0,"pre",5),i.YNc(48,k,5,0,"p",3),i.TgZ(49,"p",9),i._uU(50,"You can test it's installed and running with:"),i.qZA(),i.YNc(51,R,3,0,"pre",5),i.YNc(52,b,3,0,"pre",5),i.TgZ(53,"h3",14),i._uU(54," Step 4: Install Android dependencies and IDE "),i.qZA(),i.TgZ(55,"p",9),i._uU(56," See "),i.TgZ(57,"a",15),i._uU(58,"official install guide"),i.qZA(),i._uU(59,". "),i.qZA(),i.TgZ(60,"h3",16),i._uU(61," Step 5: Install global Node.js packages "),i.qZA(),i.TgZ(62,"pre",10),i.TgZ(63,"code",11),i._uU(64,"\n    npm i -g bunyan typings typescript @angular/cli\n  "),i.qZA(),i.qZA(),i.TgZ(65,"h3",17),i._uU(66," Step 6: Development backend (Node.js) "),i.qZA(),i.TgZ(67,"pre",10),i.TgZ(68,"code",11),i._uU(69,"\n    git clone https://github.com/SamuelMarks/restify-orm-scaffold\n    cd restify-orm-scaffold\n    typings i\n    tsc\n    npm start\n  "),i.qZA(),i.qZA(),i.TgZ(70,"h3",18),i._uU(71," Step 7: Angular frontend (web) "),i.qZA(),i.TgZ(72,"pre",10),i.TgZ(73,"code",11),i._uU(74,"\n    git clone https://github.com/SamuelMarks/ng-material-scaffold\n    cd ng-material-scaffold\n    npm i\n    npm start\n  "),i.qZA(),i.qZA(),i.TgZ(75,"h3",19),i._uU(76," Step 8: Android "),i.qZA(),i.TgZ(77,"pre",10),i.TgZ(78,"code",11),i._uU(79,"\n    git clone https://github.com/SamuelMarks/android-auth-scaffold\n  "),i.qZA(),i.qZA(),i.TgZ(80,"p",9),i._uU(81," Now open that in Android Studio; build and run it. "),i.qZA(),i.TgZ(82,"h3",20),i._uU(83," Step 9: Branding "),i.qZA(),i.TgZ(84,"p",9),i._uU(85,"Now is a good time to rename everything. Close all open windows, and let's begin."),i.qZA(),i.TgZ(86,"p",9),i._uU(87,"Install "),i.YNc(88,x,5,0,"span",3),i.TgZ(89,"a",21),i.TgZ(90,"code"),i._uU(91,"fd"),i.qZA(),i.qZA(),i._uU(92,". Then within each of the repo directories, or from a parent directory, run:"),i.qZA(),i.TgZ(93,"pre",10),i.TgZ(94,"code",11),i._uU(95),i.qZA(),i.qZA(),i.TgZ(96,"p",9),i._uU(97,"You will need likely want to update descriptions and add DVCS repositories also. Install "),i.TgZ(98,"a",22),i.TgZ(99,"code"),i._uU(100,"hub"),i.qZA(),i.qZA(),i._uU(101," with "),i.YNc(102,I,2,0,"code",3),i.YNc(103,y,4,0,"span",3),i.qZA(),i.YNc(104,N,3,2,"pre",5),i.qZA()),2&n&&(i.xp6(3),i.Q6J("ngIf",e.os("Linux")),i.xp6(1),i.Q6J("ngIf",e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(3),i.Q6J("ngIf",e.os("Windows")),i.xp6(1),i.Q6J("ngIf",e.os("macOS")||e.os("Linux")),i.xp6(4),i.Q6J("ngIf",e.os("Linux")),i.xp6(1),i.Q6J("ngIf",e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(3),i.Q6J("ngIf",e.os("Linux")||e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(8),i.Q6J("ngIf",e.os("Linux")),i.xp6(1),i.Q6J("ngIf",e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(13),i.Q6J("ngIf",e.os("Linux")),i.xp6(1),i.Q6J("ngIf",e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(1),i.Q6J("ngIf",e.os("Linux")||e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(1),i.Q6J("ngIf",e.os("Linux")||e.os("macOS")),i.xp6(3),i.Q6J("ngIf",e.os("Linux")||e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Windows")),i.xp6(36),i.Q6J("ngIf",e.os("Windows")),i.xp6(7),i.lnq("\n    fd -t f -exec sed -i 's/ng-material-scaffold/projectname/g' ","{}"," \\;\n    fd -t f -exec sed -i 's/NgMaterialScaffold/projectname/g' ","{}"," \\;\n\n    fd -t f -exec sed -i 's/restify-orm-scaffold/projectname/g' ","{}"," \\;\n  "),i.xp6(7),i.Q6J("ngIf",e.os("macOS")),i.xp6(1),i.Q6J("ngIf",e.os("Linux")),i.xp6(1),i.Q6J("ngIf",e.os("Linux")||e.os("macOS")))},directives:[s.O5],styles:[".pad[_ngcontent-%COMP%]{padding:0 3em}"]}),n})()}];let O=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=i.oAB({type:n}),n.\u0275inj=i.cJS({imports:[[s.ez,t.Bz,t.Bz.forChild(P)]]}),n})()}}]);